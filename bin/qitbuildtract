#! /usr/bin/env bash
##############################################################################
#
# Quantitative Imaging Toolkit (QIT) (c) 2012-2022 Ryan Cabeen
# All rights reserved.
#
# The Software remains the property of Ryan Cabeen ("the Author").
#
# The Software is distributed "AS IS" under this Licence solely for
# non-commercial use in the hope that it will be useful, but in order
# that the Author as a charitable foundation protects its assets for
# the benefit of its educational and research purposes, the Author
# makes clear that no condition is made or to be implied, nor is any
# warranty given or to be implied, as to the accuracy of the Software,
# or that it will be suitable for any particular purpose or for use
# under any specific conditions. Furthermore, the Author disclaims
# all responsibility for the use which is made of the Software. It
# further disclaims any liability for the outcomes arising from using
# the Software.
#
# The Licensee agrees to indemnify the Author and hold the
# Author harmless from and against any and all claims, damages and
# liabilities asserted by third parties (including claims for
# negligence) which arise directly or indirectly from the use of the
# Software or the sale of any products based on the Software.
#
# No part of the Software may be reproduced, modified, transmitted or
# transferred in any form or by any means, electronic or mechanical,
# without the express permission of the Author. The permission of
# the Author is not required if the said reproduction, modification,
# transmission or transference is done without financial return, the
# conditions of this Licence are imposed upon the receiver of the
# product, and all original and amended source code is included in any
# transmitted product. You may be held legally responsible for any
# copyright infringement that is caused or encouraged by your failure to
# abide by these terms and conditions.
#
# You are not permitted under this Licence to use this Software
# commercially. Use for which any financial return is received shall be
# defined as commercial use, and includes (1) integration of all or part
# of the source code or the Software into a product for sale or license
# by or on behalf of Licensee to third parties or (2) use of the
# Software or any derivative of it for research with the final aim of
# developing software products for sale or license to a third party or
# (3) use of the Software or any derivative of it for research with the
# final aim of developing non-software products for sale or license to a
# third party, or (4) use of the Software to provide any service to an
# external organisation for which payment is received.
#
##############################################################################

usage()
{
    echo "
Name: $(basename $0)

Description:

  Build an individual bundle atlas
   
Usage: 

  $(basename $0) [opts] --input <curves.nii.gz> --reference <mask.nii.gz> --output <output>

Input Parameters:

   --input <curves.vtk.gz>:    a list of bundle geometry files (vtk) with specific basenames
   --reference <mask.nii.gz>:  a reference volume or mask
   --output <output_dir>:      the output directory where the bundle index will be built

Author: Ryan Cabeen
"

exit 1
}

if [ $# -eq 0 ]; then usage; fi

posit=""
input=""
reference=""
output=""

echo "args: $@"

while (( "$#" )); do
    case $1 in
        --input)     shift; input=$1 ;;
        --reference) shift; ref=$1 ;;
        --output)    shift; output=$1 ;;
        --help )     usage ;;
        -*|--*=)     echo "Error: Unsupported flag $1" >&2; exit 1 ;;
        *)           posit="${posit} ${1}" ;;
    esac; shift
done

if [ "${input}" == "" ]; then echo "input is missing!"; exit 1; fi 
if [ "${reference}" == "" ]; then echo "reference is missing!"; exit 1; fi 
if [ "${output}" == "" ]; then echo "output is missing!"; exit 1; fi 

myout=${output}.tmp.${RANDOM}
${cmd} --make tract.makefile \
	INPUT=${input} REF=${reference} OUTPUT=${myout} ${posit}

if [ -e ${output} ]; then
  bck=${output}.bck.${RANDOM}
  echo "backing up previous results to ${bck}"
  mv ${output} ${bck}
fi

echo "cleaning up"
mv ${myout} ${output}

echo "finished $(basename $0)"

##############################################################################
# End of file
##############################################################################
