#! /bin/bash
################################################################################
#
# Quantitative Imaging Toolkit (QIT) (c) 2012-2022 Ryan Cabeen
# All rights reserved.
#
# The Software remains the property of Ryan Cabeen ("the Author").
#
# The Software is distributed "AS IS" under this Licence solely for
# non-commercial use in the hope that it will be useful, but in order
# that the Author as a charitable foundation protects its assets for
# the benefit of its educational and research purposes, the Author
# makes clear that no condition is made or to be implied, nor is any
# warranty given or to be implied, as to the accuracy of the Software,
# or that it will be suitable for any particular purpose or for use
# under any specific conditions. Furthermore, the Author disclaims
# all responsibility for the use which is made of the Software. It
# further disclaims any liability for the outcomes arising from using
# the Software.
#
# The Licensee agrees to indemnify the Author and hold the
# Author harmless from and against any and all claims, damages and
# liabilities asserted by third parties (including claims for
# negligence) which arise directly or indirectly from the use of the
# Software or the sale of any products based on the Software.
#
# No part of the Software may be reproduced, modified, transmitted or
# transferred in any form or by any means, electronic or mechanical,
# without the express permission of the Author. The permission of
# the Author is not required if the said reproduction, modification,
# transmission or transference is done without financial return, the
# conditions of this Licence are imposed upon the receiver of the
# product, and all original and amended source code is included in any
# transmitted product. You may be held legally responsible for any
# copyright infringement that is caused or encouraged by your failure to
# abide by these terms and conditions.
#
# You are not permitted under this Licence to use this Software
# commercially. Use for which any financial return is received shall be
# defined as commercial use, and includes (1) integration of all or part
# of the source code or the Software into a product for sale or license
# by or on behalf of Licensee to third parties or (2) use of the
# Software or any derivative of it for research with the final aim of
# developing software products for sale or license to a third party or
# (3) use of the Software or any derivative of it for research with the
# final aim of developing non-software products for sale or license to a
# third party, or (4) use of the Software to provide any service to an
# external organisation for which payment is received.
#
################################################################################
#
# Name: QBCTMEAS
#
# Description:
#
#   This script computes connectivity measures using the Brain Connectivity
#   Toolbox (https://sites.google.com/site/bctnet/).  This includes global
#   measures and local measures (computed for ach node of the network).
#
# Arguments:
#
#  mat.txt: a NxN connectivity matrix
#  names.txt: a list of N node names  
#  output_dir: the directory for the output measures 
#
# Author: Ryan Cabeen
#
################################################################################

abspath() 
{
    cd "$(dirname "$1")"
    printf "%s/%s\n" "$(pwd)" "$(basename "$1")"; 
}

name=$(basename $0)
if [ $# -ne "3" ]; then
    echo "usage:" 
    echo "  ${name} mat.txt names.txt output_dir" 
    echo "description:"
    echo "  compute a set of network metrics from the brain connectivity"
    echo "  toolbox.  this requires the package to be on the matlab/octave path"
    exit
fi

hash matlab 2> /dev/null;
if [ $? -ne "0" ]; then
    hash octave 2> /dev/null;
    if [ $? -ne "0" ]; then
        echo "matlab or octave are required"
        exit;
    else
        prog="octave -q";
    fi
else
    prog="matlab -nodesktop -nojvm -nosplash";
fi

echo "started ${name}"

root=$(abspath $(dirname $0)/../lib/matlab)
script=$(abspath ${root}/bctmeas.m)
id=$(date +%s)${RANDOM}
tmpout=${3}.tmp.${RANDOM}

runbct()
{
	log=/tmp/${name}_${id}.txt
	tmp=/tmp/${name}_${id}.m

	echo "addpath('${root}')" > $tmp
	echo "addpath('${root}/bct')" >> $tmp
	echo "bctmeas('$1', '$2', '$3')" >> $tmp
	cat $tmp | $prog &> $log

	if [ $? -ne "0" ]; then
			echo "error:"
			cat $log
			exit
	fi

	rm $log
	rm $tmp
}

mkdir -p ${tmpout}

if [ -e ${1}.txt ]; then
  echo "... detected batch mode"
  for name in $(cat ${1}.txt); do
    echo "... processing ${name}"
    mkdir -p ${tmpout}/${name}
    runbct ${1}/${name}.txt ${2} ${tmpout}/${name}
  done
else
  echo "... detected single mode"
  runbct $1 $2 ${tmpout}
fi

mkdir -p ${3}
mv ${tmpout}/* ${3}
rm -rf ${tmpout}

echo "finished ${name}"

################################################################################
# End of file
################################################################################
