#! /bin/bash
################################################################################
#
# Quantitative Imaging Toolkit (QIT) (c) 2012-2022 Ryan Cabeen
# All rights reserved.
# 
# The Software remains the property of Ryan Cabeen ("the Author").
# 
# The Software is distributed "AS IS" under this Licence solely for
# non-commercial use in the hope that it will be useful, but in order
# that the Author as a charitable foundation protects its assets for
# the benefit of its educational and research purposes, the Author
# makes clear that no condition is made or to be implied, nor is any
# warranty given or to be implied, as to the accuracy of the Software,
# or that it will be suitable for any particular purpose or for use
# under any specific conditions. Furthermore, the Author disclaims
# all responsibility for the use which is made of the Software. It
# further disclaims any liability for the outcomes arising from using
# the Software.
# 
# The Licensee agrees to indemnify the Author and hold the
# Author harmless from and against any and all claims, damages and
# liabilities asserted by third parties (including claims for
# negligence) which arise directly or indirectly from the use of the
# Software or the sale of any products based on the Software.
# 
# No part of the Software may be reproduced, modified, transmitted or
# transferred in any form or by any means, electronic or mechanical,
# without the express permission of the Author. The permission of
# the Author is not required if the said reproduction, modification,
# transmission or transference is done without financial return, the
# conditions of this Licence are imposed upon the receiver of the
# product, and all original and amended source code is included in any
# transmitted product. You may be held legally responsible for any
# copyright infringement that is caused or encouraged by your failure to
# abide by these terms and conditions.
# 
# You are not permitted under this Licence to use this Software
# commercially. Use for which any financial return is received shall be
# defined as commercial use, and includes (1) integration of all or part
# of the source code or the Software into a product for sale or license
# by or on behalf of Licensee to third parties or (2) use of the
# Software or any derivative of it for research with the final aim of
# developing software products for sale or license to a third party or
# (3) use of the Software or any derivative of it for research with the
# final aim of developing non-software products for sale or license to a
# third party, or (4) use of the Software to provide any service to an
# external organisation for which payment is received.
#
################################################################################
#
# DCMCONVERT: a bulk DICOM converter 
#
#   This program takes a directory containing DICOM files and converts them to
#   NIFTI with the same directory structure.
#   
#   This assumes that dcm2nii is on the path.  The default dicom filename 
#   extension is "dcm", but it can be set using an environment variable named 
#   DCM_EXT.  The default dcm2nii flags can be overriden using an environment 
#   variable named DCM_FLAGS.
#
# Author: Ryan Cabeen
#
################################################################################

if [ $# -ne "2" ]; then
    echo "Usage: $(basename ${0}) input_dir output_dir"
    exit
fi

abspath()
{
    cd "$(dirname "$1")"
    printf "%s/%s\n" "$(pwd)" "$(basename "$1")";
}

DCM_EXT=${DCM_EXT:-dcm}

# these are flags used by dcm2nii
DCM_FLAGS=${DCM_FLAGS:--d N -r N -4 Y -p Y -e N}

echo "started"

echo "  input: ${1}"
echo "  output: ${2}"

input=$(abspath ${1})
output=${2}

mkdir -p ${output}
output=$(abspath ${output})

# record what we did
logfn=${output}/log.txt
echo "Bulk Dicom Convert Log" > ${logfn}
echo "" >> ${logfn}
echo "script: $(abspath ${0})" >> ${logfn}
echo "input: ${input}" >> ${logfn}
echo "output: ${input}" >> ${logfn}
echo "" >> ${logfn}
echo "date: $(date)" >> ${logfn}
echo "user: $(whoami)" >> ${logfn}
echo "machine: $(hostname)" >> ${logfn}
echo "environ:" >> ${logfn}
echo "" >> ${logfn}
env >> ${logfn}

# loop over all subdirectories
for d in $(cd ${input} && find * -type d); do 
  # process those that contain dicom files
  if [[ -n $(find ${input}/${d} -maxdepth 1 -type f -name "*${DCM_EXT}" -print -quit) ]]; then 
    echo "  processing ${input}/${d}"
    
    # write the output to a similar directory in the output
    outd=${output}/${d}
    mkdir -p ${outd}

    # convert the dicoms
    dcm2nii ${DCM_FLAGS} -o ${outd} ${input}/${d}/*.${DCM_EXT}
  fi 
done

echo "finished"
